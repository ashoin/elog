{"remainingRequest":"C:\\Users\\Administrator\\Documents\\GitHub\\elog\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Documents\\GitHub\\elog\\src\\utils\\request.js","dependencies":[{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\elog\\src\\utils\\request.js","mtime":1604764044972},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\elog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\elog\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IGNvb2tpZSBmcm9tICdqcy1jb29raWUnOyAvLyDliJvlu7pheGlvc+WunuS+iwoKY29uc3Qgc2VydmljZSA9IGF4aW9zLmNyZWF0ZSh7CiAgLy8gYXBpIOeahCBiYXNlX3VybCAKICBiYXNlVVJMOiAnLy8xOTIuMTY4LjQzLjEzMDo4MjIyJywKICB0aW1lb3V0OiA1MDAwIC8vIOivt+axgui2heaXtuaXtumXtCAKCn0pOyAvLyBodHRwIHJlcXVlc3Qg5oum5oiq5ZmoCgpzZXJ2aWNlLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShjb25maWcgPT4gewogIC8vZGVidWdnZXIgCiAgaWYgKGNvb2tpZS5nZXQoJ2h1aWp1X3Rva2VuJykpIHsKICAgIGNvbnNvbGUubG9nKGNvb2tpZS5nZXQoJ2h1aWp1X3Rva2VuJykpOwogICAgY29uZmlnLmhlYWRlcnNbJ3Rva2VuJ10gPSBjb29raWUuZ2V0KCdodWlqdV90b2tlbicpOwogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSwgZXJyID0+IHsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyKTsKfSk7IC8vIGh0dHAgcmVzcG9uc2Ug5oum5oiq5ZmoLy8yNTAwMO+8muiuouWNleaUr+S7mOS4re+8jOS4jeWBmuS7u+S9leaPkOekugoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKHJlc3BvbnNlID0+IHsKICAvL2RlYnVnZ2VyICAgCiAgaWYgKHJlc3BvbnNlLmRhdGEuY29kZSA9PSAyODAwNCkgewogICAgY29uc29sZS5sb2coInJlc3BvbnNlLmRhdGEucmVzdWx0Q29kZeaYrzI4MDA0Iik7IC8vIOi/lOWbniDplJnor6/ku6PnoIEtMSDmuIXpmaR0aWNrZXTkv6Hmga/lubbot7PovazliLDnmbvlvZXpobXpnaIgICAKICAgIC8vZGVidWdnZXIgICAgCgogICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAiL2xvZ2luIjsKICAgIHJldHVybjsKICB9IGVsc2UgewogICAgaWYgKHJlc3BvbnNlLmRhdGEuY29kZSAhPT0gMjAwMDApIHsvLzI1MDAw77ya6K6i5Y2V5pSv5LuY5Lit77yM5LiN5YGa5Lu75L2V5o+Q56S6ICAKICAgICAgLy8gaWYgKHJlc3BvbnNlLmRhdGEuY29kZSAhPSAyNTAwMCkgewogICAgICAvLyAgICAgTWVzc2FnZSh7CiAgICAgIC8vICAgICAgICAgbWVzc2FnZTogcmVzcG9uc2UuZGF0YS5tZXNzYWdlIHx8ICdlcnJvcicsCiAgICAgIC8vICAgICAgICAgdHlwZTogJ2Vycm9yJywKICAgICAgLy8gICAgICAgICBkdXJhdGlvbjogNSAqIDEwMDAKICAgICAgLy8gICAgIH0pCiAgICAgIC8vIH0KICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiByZXNwb25zZTsKICAgIH0KICB9Cn0sIGVycm9yID0+IHsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IucmVzcG9uc2UpOyAvLyDov5Tlm57mjqXlj6Pov5Tlm57nmoTplJnor6/kv6Hmga8KfSk7CmV4cG9ydCBkZWZhdWx0IHNlcnZpY2U7"},{"version":3,"sources":["C:/Users/Administrator/Documents/GitHub/elog/src/utils/request.js"],"names":["axios","cookie","service","create","baseURL","timeout","interceptors","request","use","config","get","console","log","headers","err","Promise","reject","response","data","code","window","location","href","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAA+B;;AAC/B,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AACzB;AACAC,EAAAA,OAAO,EAAE,uBAFgB;AAGzBC,EAAAA,OAAO,EAAE,IAHgB,CAIzB;;AAJyB,CAAb,CAAhB,C,CAKG;;AACHH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiCC,MAAM,IAAI;AAAE;AACzC,MAAIR,MAAM,CAACS,GAAP,CAAW,aAAX,CAAJ,EAA+B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACS,GAAP,CAAW,aAAX,CAAZ;AACAD,IAAAA,MAAM,CAACI,OAAP,CAAe,OAAf,IAA0BZ,MAAM,CAACS,GAAP,CAAW,aAAX,CAA1B;AACH;;AACD,SAAOD,MAAP;AACH,CAND,EAMGK,GAAG,IAAI;AACN,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACH,CARD,E,CASA;;AACAZ,OAAO,CAACI,YAAR,CAAqBW,QAArB,CAA8BT,GAA9B,CAAkCS,QAAQ,IAAI;AAC1C;AACA,MAAIA,QAAQ,CAACC,IAAT,CAAcC,IAAd,IAAsB,KAA1B,EAAiC;AAC7BR,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAD6B,CAE7B;AACA;;AACAQ,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACA;AACH,GAND,MAMO;AACH,QAAIL,QAAQ,CAACC,IAAT,CAAcC,IAAd,KAAuB,KAA3B,EAAkC,CAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KARD,MAQO;AACH,aAAOF,QAAP;AACH;AACJ;AACJ,CArBD,EAqBGM,KAAK,IAAI;AACR,SAAOR,OAAO,CAACC,MAAR,CAAeO,KAAK,CAACN,QAArB,CAAP,CADQ,CAC8B;AACzC,CAvBD;AAwBA,eAAef,OAAf","sourcesContent":["import axios from 'axios'\r\nimport cookie from 'js-cookie' // 创建axios实例\r\nconst service = axios.create({\r\n    // api 的 base_url \r\n    baseURL: '//192.168.43.130:8222',\r\n    timeout: 5000\r\n    // 请求超时时间 \r\n}) // http request 拦截器\r\nservice.interceptors.request.use(config => { //debugger \r\n    if (cookie.get('huiju_token')) {\r\n        console.log(cookie.get('huiju_token'))\r\n        config.headers['token'] = cookie.get('huiju_token');\r\n    }\r\n    return config\r\n}, err => {\r\n    return Promise.reject(err);\r\n})\r\n// http response 拦截器//25000：订单支付中，不做任何提示\r\nservice.interceptors.response.use(response => {\r\n    //debugger   \r\n    if (response.data.code == 28004) {\r\n        console.log(\"response.data.resultCode是28004\")\r\n        // 返回 错误代码-1 清除ticket信息并跳转到登录页面   \r\n        //debugger    \r\n        window.location.href = \"/login\"\r\n        return\r\n    } else {\r\n        if (response.data.code !== 20000) { //25000：订单支付中，不做任何提示  \r\n            // if (response.data.code != 25000) {\r\n            //     Message({\r\n            //         message: response.data.message || 'error',\r\n            //         type: 'error',\r\n            //         duration: 5 * 1000\r\n            //     })\r\n            // }\r\n        } else {\r\n            return response;\r\n        }\r\n    }\r\n}, error => {\r\n    return Promise.reject(error.response) // 返回接口返回的错误信息\r\n});\r\nexport default service"]}]}